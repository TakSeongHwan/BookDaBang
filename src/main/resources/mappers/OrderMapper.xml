<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bookdabang.mapper.OrderMapper">

	<!-- 유저ID or orderNo와 비밀번호로 select -->
	<select id="selectOrder" resultType="ProdOrder">
		select * from prodOrder
		<choose>
			<when test="userId != null">
				where userId = #{userId}
			</when>
			<otherwise>
				where orderBundle = #{orderBundle} and orderPwd =
				#{orderPwd}
			</otherwise>
		</choose>
	</select>

	<!-- 관리자가 전체 order select -->
	<select id="selectAllOrder" resultType="ProdOrder">
		select * from prodOrder
		order by orderNo desc limit #{startNum},#{postPerPage}
	</select>

	<!-- 관리자가 orderNo로 update -->
	<update id="updateAdminOrder">
		update prodOrder set orderState_code =
		#{orderState_code}, releaseDate = #{releaseDate} where orderNo =
		#{orderNo}
	</update>


	<!-- prodOrder insert -->
	<insert id="insertOrder">

		insert into
		prodOrder(orderNo,userId,productNo,productQtt,orderState_code,addressNo,price,orderPwd,orderBundle,confirm)
		insert into prodOrder(orderNo,userId,productNo,productQtt,orderState_code,addressNo,price,orderPwd,orderBundle,confirm)
		values(#{orderNo},#{userId},#{productNo},#{productQtt},1,#{addressNo},#{price},sha1(md5(#{orderPwd})),#{orderBundle},'N')
	</insert>

	<!-- Order confirm update -->
	<update id="updateOrderCofirm">
	
		update prodOrder set confirm= #{confirm} where orderNo = #{orderNo} 
	</update>
	
	<!-- 페이징을 위한 주문개수 -->
	<select id="orderCnt" resultType="int">
		select count(*) from prodOrder where 1=1
		<if test="searchType != '' and  searchType != null">
			<if test="searchType =='prodNo'">
				and productNo like concat('%', #{searchWord}, '%')
			</if>
			<if test="searchType =='orderNo'">
				and orderNo like concat('%', #{searchWord}, '%')
			</if>
			<if test="searchType =='userId'">
				and userId like concat('%', #{searchWord}, '%')
			</if>
		</if>
		<choose>
			<when test="startSellDate != '' and endSellDate != ''">
				and orderDate between date(#{startSellDate}) and
				date(#{endSellDate}) +1
			</when>
			<when test="startSellDate != '' and endSellDate == ''">
				and orderDate between date(#{startSellDate}) and
				now()
			</when>
			<when test="startSellDate == '' and endSellDate != ''">
				and orderDate between '1999-01-01' and
				date(#{endSellDate}) +1
			</when>
		</choose>
		<if test="all == false">
			<choose>
				<when test="orderState !=0 and confirm !=''">
					and orderState_code = #{orderState} and confirm =
					#{confirm}
					and orderState_code = #{orderState} and confirm = #{confirm}
				</when>
				<when test="orderState ==0 and confirm != ''">
					and confirm = #{confirm}
				</when>
				<when test="orderState !=0 and confirm == ''">
					and orderState_code = #{orderState}
				</when>
			</choose>
		</if>
	</select>

	<!-- 페이징을 한 주문 -->
	<select id="orderView" resultType="ProdOrder">
		select * from prodOrder where 1=1
		<if test="searchType != '' and  searchType != null">
			<if test="searchType =='prodNo'">
				and productNo like concat('%', #{searchWord}, '%')
			</if>
			<if test="searchType =='orderNo'">
				and orderNo like concat('%', #{searchWord}, '%')
			</if>
			<if test="searchType =='userId'">
				<choose>
					<when test="searchWord == null or searchWord == '비회원'">
						and userId is null
					</when>
					<otherwise>
						and userId like concat('%', #{searchWord}, '%')
					</otherwise>
				</choose>


			<choose>
				<when test="searchWord == null or searchWord == '비회원'">
					and userId is null
				</when>
				<otherwise>
					and userId like concat('%', #{searchWord}, '%')
				</otherwise>
			</choose>
				
				
			</if>
			<if test="searchType=='title'">
				and (productNo) in (select product_no from product where
				title like concat('%',#{searchWord},'%'))
			</if>
		</if>
		<choose>
			<when test="startSellDate != '' and endSellDate != ''">
				and orderDate between date(#{startSellDate}) and
				date(#{endSellDate}) +1
			</when>
			<when test="startSellDate != '' and endSellDate == ''">
				and orderDate between date(#{startSellDate}) and
				now()
			</when>
			<when test="startSellDate == '' and endSellDate != ''">
				and orderDate between '1999-01-01' and
				date(#{endSellDate}) +1
			</when>
		</choose>
		<if test="all == false">
			<choose>
				<when test="orderState !=0 and confirm !=''">
					and orderState_code = #{orderState} and confirm =
					#{confirm}
					and orderState_code = #{orderState} and confirm = #{confirm}
				</when>
				<when test="orderState ==0 and confirm != ''">
					and confirm = #{confirm}
				</when>
				<when test="orderState !=0 and confirm == ''">
					and orderState_code = #{orderState}
				</when>
			</choose>
		</if>


		order by orderNo desc limit #{startNum}, #{postPerPage}
	</select>

	
	<!-- 주문상태 코드 변경 -->
	<update id="updateOrderState">
		update prodOrder set orderState_code = #{orderState}
		<if test="orderState == 2">
			, releaseDate = now()
		</if>
		where orderNo = #{orderNo}
	</update>

	<select id="getNextOrderNo" resultType="int">
		select max(orderNo)+1
		from prodOrder
	</select>

	<!-- 로그인 주문상태조회 -->
	<select id="orderStatus" resultType="OrderViewDTO">
		select
		o.orderNo,p.title,p.cover, o.productNo,o.orderState_code,o.confirm,
		o.productQtt, o.price, o.orderDate, o.releaseDate, r.refundNo
		from prodOrder as o inner join product as p
		on o.productNo = p.product_no
		left outer join refund as r
		on r.orderNo = o.orderNo
		where o.userId = #{userId}
		order by orderNo desc limit #{startNum}, #{postPerPage}
	</select>

	<!-- 비로그인 주문조회 -->
	<select id="orderCheck" resultType="OrderViewDTO">
		select
		o.orderNo,p.title,p.cover, o.productNo,o.orderState_code,o.confirm,
		o.productQtt, o.price, o.orderDate, o.releaseDate
		from prodOrder as o inner join product as p
		on o.productNo = p.product_no
		where o.orderBundle = #{orderBundle} and
		o.orderPwd = sha1(md5(#{orderPwd}))
	</select>

	<!-- 로그인 주문상태 조회 페이징 -->
	<select id="orderStatusCnt" resultType="int">
		select count(orderNo)
		from prodOrder where userId = #{userId}
	</select>
	
	<!-- update -->
	<update id="confirmUpdate">
	update prodOrder set confirm = 'Y' where orderNo = #{orderNo}
	</update>

	<!-- <select id="getNextOrderNo" resultType="int">
		select max(orderNo)+1 from prodOrder
	</select> -->
	
	<!-- 로그인 주문상태조회 
	<select id="orderStatus" resultType="OrderViewDTO">
		select o.orderNo,p.title,p.cover, o.productNo,o.orderState_code,o.confirm, o.productQtt, o.price, o.orderDate, o.releaseDate 
		from prodOrder as o inner join product as p 
		on o.productNo = p.product_no
		where o.userId = #{userId}
		order by orderNo desc limit #{startNum}, #{postPerPage} 
	</select>
	-->
	<!-- 비로그인 주문조회 
	<select id="orderCheck" resultType="OrderViewDTO">
		select o.orderNo,p.title,p.cover, o.productNo,o.orderState_code,o.confirm, o.productQtt, o.price, o.orderDate, o.releaseDate 
		from prodOrder as o inner join product as p 
		on o.productNo = p.product_no
		where o.orderBundle = #{orderBundle} and o.orderPwd = sha1(md5(#{orderPwd}))
	</select>
	-->
	<!-- 로그인 주문상태 조회 페이징
	<select id="orderStatusCnt" resultType="int">
		select count(orderNo)  from prodOrder where userId = #{userId}
	</select>
	 -->
</mapper>