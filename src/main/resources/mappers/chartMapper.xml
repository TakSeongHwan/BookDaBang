<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
 <mapper namespace="com.bookdabang.mapper.ChartMapper">
 <select id="getSalesCount" resultType="ProductVO">
 select * from product where sales_count >= 90 limit 10
 
 </select>
  <select id="getRandomBook" resultType="ProductVO">
 select * from product ORDER BY RAND() limit 10
 </select>
 <select id="getVisitorInfo" resultType="VisitorCountWithDateFormat">
select DATE_FORMAT(accessdate,'%m') as dateSort ,count(ipaddr)as visitor from visitor_ipcheck group by dateSort order by accessdate asc
 </select>
 <insert id="autoInsertVisitor">
 insert into visitor_ipcheck values(#{ipaddr},#{accessdate})
 </insert>
 <select id="getTodayVisitor" resultType="int">
select count(DATE_FORMAT(accessdate,'%Y-%m-%d')) from visitor_ipcheck where DATE_FORMAT(accessdate,'%Y-%m-%d') = (select DATE_FORMAT(now(),'%Y-%m-%d'))
 </select>
 <select id="getYesterdayVisitor" resultType="int">
 select count(DATE_FORMAT(accessdate,'%Y-%m-%d')) from visitor_ipcheck where DATE_FORMAT(accessdate,'%Y-%m-%d') = (select DATE_FORMAT(now()- interval 1 day,'%Y-%m-%d'))
 </select>
<select id="getProductInfo" resultType="AdminProduct">
select p.*,c.category_name,count(r.reviewNo) as reviewCount
from product as p 
JOIN category as c on p.category_code = c.category_code 
LEFT OUTER JOIN review as r on p.product_no = r.productNo
group by p.product_no, r.productNo
<if test='sortType.equals("")'>
 	order by p.product_no asc
 	</if>
 	<if test='sortType.equals("category")'>
 		order by c.category_name asc
 	</if>
 	<if test='sortType.equals("isbn13")'>
 		order by p.isbn13 asc
 	</if>
 	<if test='sortType.equals("title")'>
 		order by p.title asc
 	</if>
 	<if test='sortType.equals("priceAsc")'>
 		order by p.price asc, p.sell_price asc
 	</if>
 	<if test='sortType.equals("priceDesc")'>
 		order by p.price desc, p.sell_price desc
 	</if>
 	<if test='sortType.equals("reviewDesc")'>
 		order by reviewCount desc
 	</if>
 	
  limit #{startNum}, #{postPerPage} 	
</select>
 <select id="getTotalPost" resultType="int">
 	select count(*) as totalCnt from product
 	
 	</select>
 	
 	<select id="getSearchResultCnt" resultType="int">
 	  select count(*) from product as p, category as c where p.category_code = c.category_code and
 	  <if test='searchType == "title"'>
 	  p.title like concat('%',#{searchWord} ,'%')
 	  </if>
 	  <if test='searchType == "category"'>
 	  c.category_name like concat('%',#{searchWord} ,'%')
 	  </if>
 	  <if test='searchType == "isbn13"'>
 	  p.isbn13 like concat('%',#{searchWord} ,'%')
 	  </if>
 	</select>
 	
 	<select id="getSearchResultList" resultType="AdminProduct">
 	
 	select p.*,c.category_name,count(r.reviewNo) as reviewCount
from product as p 
JOIN category as c on p.category_code = c.category_code 
LEFT OUTER JOIN review as r on p.product_no = r.productNo
	where
 	  <if test='searchType == "title"'>
 	  p.title like concat('%',#{searchWord} ,'%')
 	  </if>
 	  <if test='searchType == "category"'>
 	  c.category_name like concat('%',#{searchWord} ,'%')
 	  </if>
 	  <if test='searchType == "isbn13"'>
 	  p.isbn13 like concat('%',#{searchWord} ,'%')
 	  </if>
 group by p.product_no, r.productNo
 	  <if test='sortType.equals("")'>
 	order by p.product_no asc
 	</if>
 	
 	<if test='sortType.equals("category")'>
 		order by c.category_name asc
 	</if>
 	<if test='sortType.equals("isbn13")'>
 		order by p.isbn13 asc
 	</if>
 	<if test='sortType.equals("title")'>
 		order by p.title asc
 	</if>
 	<if test='sortType.equals("priceAsc")'>
 		order by p.price asc, p.sell_price asc
 	</if>
 	<if test='sortType.equals("priceDesc")'>
 		order by p.price desc, p.sell_price desc
 	</if>
 	<if test='sortType.equals("reviewDesc")'>
 		order by reviewCount desc
 	</if>
 	
  limit #{startNum}, #{postPerPage} 	
 	  
 	</select>
 	
 	<select id="getCategoryTotalSales" resultType="CategoryTotalSales">
 	 	select c.category_name, sum(s.productqtt) as totalSales 
from product as p join category as c on p.category_code = c.category_code
LEFT OUTER JOIN sales as s on p.product_no = s.product_no
group by p.category_code order by totalSales desc
 	 	</select>
 	 	
 	 	<select id="getRecentBestSellerInSalesData" resultType="RecentBestSeller">
 	 	select p.title, p.cover, sum(s.productqtt) as totalSalesCount, c.category_name from product as p join category as c on p.category_code = c.category_code
		JOIN sales as s on p.product_no = s.product_no
		group by p.product_no order by totalSalesCount desc
 	 	</select>
 	 	
 	<select id="getWeekVisitor" resultType="VisitorCountWithDateFormat">
 	select DATE_FORMAT(accessdate,'%m-%d') as dateSort ,count(ipaddr)as visitor 
 	from visitor_ipcheck where DATE_FORMAT(accessdate,'%m-%d') 
 	between (select DATE_FORMAT(now()- interval 6 day,'%m-%d')) and DATE_FORMAT(now(),'%m-%d') 
 	group by dateSort order by dateSort asc
 	</select>
 	
 	<select id="getLessStock" resultType="com.bookdabang.common.domain.ProductVO">
 	select * from product where stock &lt; 5
 	</select>
 	
 	<select id="getDetailChartCategory" resultType="SalesDataDetail">
 	<!-- select c.category_name, sum(s.productqtt) as totalSales 
	from product as p join category as c on p.category_code = c.category_code
	LEFT OUTER JOIN sales as s on p.product_no = s.product_no
	group by p.category_code -->
	
	 select p.product_no, c.category_name, p.title, p.author, p.price, p.sell_price, 
	(select sum(s.productqtt) from sales as s, prodOrder as o
	where s.orderNo = o.orderNo and s.product_no = p.product_no
	group by s.product_no) as sell_count
	from product as p, category as c, sales as s, prodOrder as o, member as m 
	where p.category_code = c.category_code and s.product_no = p.product_no and s.orderNo = o.orderNo and o.userId = m.userId
	and purchasetime between DATE_FORMAT(#{startDate},'%Y-%c-%d') and DATE_FORMAT(#{endDate},'%Y-%c-%d')
	group by s.product_no
	order by c.category_code asc,sell_count desc
	
 	</select>
 	
 	<select id="getAge" resultType="SalesDataDetail">
     select p.product_no, c.category_name, p.title, p.author, p.price, p.sell_price, 
	(select sum(s.productqtt) from sales as s, prodOrder as o
	where s.orderNo = o.orderNo and s.product_no = p.product_no
	group by s.product_no) as sell_count, TIMESTAMPDIFF(YEAR,m.birth,now()) as age, m.gender
	from product as p, category as c, sales as s, prodOrder as o, member as m 
	where p.category_code = c.category_code and s.product_no = p.product_no and s.orderNo = o.orderNo and o.userId = m.userId
	and TIMESTAMPDIFF(YEAR, m.birth,now()) >= #{ageStart} and TIMESTAMPDIFF(YEAR, m.birth,now()) &lt; #{ageEnd}
	and purchasetime between DATE_FORMAT(#{startDate},'%Y-%c-%d') and DATE_FORMAT(#{endDate},'%Y-%c-%d')
	group by s.product_no
	order by sell_count desc, p.product_no asc
 	</select>
 	
 	<select id="getGender" resultType="SalesDataDetail">
 	select p.product_no, c.category_name, p.title, p.author, p.price, p.sell_price, 
	(select sum(s.productqtt) from sales as s, prodOrder as o
	where s.orderNo = o.orderNo and s.product_no = p.product_no
	group by s.product_no) as sell_count
	from product as p, category as c, sales as s, prodOrder as o, member as m 
	where p.category_code = c.category_code and s.product_no = p.product_no and s.orderNo = o.orderNo and o.userId = m.userId
	and m.gender = #{gender}
	and purchasetime between DATE_FORMAT(#{startDate},'%Y-%c-%d') and DATE_FORMAT(#{endDate},'%Y-%c-%d')
	group by s.product_no
	order by sell_count desc, p.product_no asc
 	
 	 </select>
 	 
 	 <select id="getVisitorDetailChart" resultType="VisitorCountWithDateFormat">
 	 select DATE_FORMAT(accessdate,
 	 <if test='searchType.equals("day")'>
 	 '%Y-%c-%d'
 	 </if>
 	 <if test='searchType.equals("week")'>
 	 '%Y-%c-%d'
 	 </if>
 	 <if test='searchType.equals("month")'>
 	 '%Y-%c'
 	 </if>
 	 <if test='searchType.equals("year")'>
 	 '%Y'
 	 </if>
 	 ) as dateSort ,count(ipaddr)as visitor from visitor_ipcheck 
 	 where accessdate between DATE_FORMAT(#{startDate},'%Y-%c-%d') and DATE_FORMAT(#{endDate},'%Y-%c-%d')
 	 group by DATE_FORMAT(accessdate,
 	 <if test='searchType.equals("day")'>
 	 '%Y-%c-%d'
 	 </if>
 	 <if test='searchType.equals("week")'>
 		'%Y-%c-%d'
 	 </if>
 	 <if test='searchType.equals("month")'>
 	 '%Y-%c'
 	 </if>
 	 <if test='searchType.equals("year")'>
 	 '%Y'
 	 </if> 
 	 )
 	 </select>
 	 
 	 <select id="getAllSalesData" resultType="int">
 	 select sum(total_price) as totalSales from sales
 	 </select>
 	 
 	  <select id="getBookSalesMonth" resultType="float">
 	select sum(productqtt)/12 as sell_avg from sales where purchasetime between DATE_SUB(now(), INTERVAL 1 YEAR) and now()
 	 </select>
 	 
 	 <select id="periodSalesDetail" resultType="SalesDataWithDate">
 select d.date, ifnull(s.totalSales,0) as totalSales 
from (select * from 
(select adddate('1970-01-01',t4.i*10000 + t3.i*1000 + t2.i*100 + t1.i*10 + t0.i) date from
 (select 0 i union select 1 union select 2 union select 3 union select 4 union select 5 union select 6 union select 7 union select 8 union select 9) t0,
 (select 0 i union select 1 union select 2 union select 3 union select 4 union select 5 union select 6 union select 7 union select 8 union select 9) t1,
 (select 0 i union select 1 union select 2 union select 3 union select 4 union select 5 union select 6 union select 7 union select 8 union select 9) t2,
 (select 0 i union select 1 union select 2 union select 3 union select 4 union select 5 union select 6 union select 7 union select 8 union select 9) t3,
 (select 0 i union select 1 union select 2 union select 3 union select 4 union select 5 union select 6 union select 7 union select 8 union select 9) t4) v
where date
between DATE_FORMAT(#{startDate},'%Y-%m-%d') and DATE_FORMAT(#{endDate},'%Y-%m-%d')
order by date asc) as d left outer join 

(select DATE_FORMAT(purchasetime, '%Y-%m-%d') as pDate, sum(total_price) as totalSales from sales group by pDate) as s
 on d.date = s.pDate where d.date between DATE_FORMAT(#{startDate},'%Y-%m-%d') and DATE_FORMAT(#{endDate},'%Y-%m-%d') order by d.date
 	 </select>
 </mapper>